@using HAN.Services
@using HAN.Services.DTOs
@using HAN.Services.Exporters
@using HAN.Services.Interfaces
@inject IExporterService FileExporterService
@inject DialogService DialogService

<RadzenTemplateForm Data="@file"
                    Style="max-width: 500px;">
    <RadzenFieldset Text="File Export">
        <RadzenStack Gap="1rem">
            <RadzenRow>
                <RadzenColumn Size="12">
                    <RadzenLabel Text="Name" Style="font-weight: bold"/>
                    <p>@file.Name</p>
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn Size="12">
                    <RadzenLabel Text="Content" Style="font-weight: bold"/>
                    <p>@file.Content</p>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem"
                 class="rz-mt-8 rz-mb-4">
        <RadzenButton Text="Export as MD" Click="@(() => ExportFile(ExporterType.Markdown))" Style="min-width: 100px;" />
        <RadzenButton Text="Export as DOCX" Click="@(() => ExportFile(ExporterType.Word))" Style="min-width: 100px;" />
        <RadzenButton Text="Export as PDF" Click="@(() => ExportFile(ExporterType.Pdf))" Style="min-width: 100px;" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public FileDto file { get; set; }

    private void ExportFile(ExporterType type)
    {
        FileExporterService.ExportToFile(file, type);
    }
}
