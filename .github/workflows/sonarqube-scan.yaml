name: SonarQube

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests with coverage
        run: |
          dotnet test --configuration Release --collect:"XPlat Code Coverage" \
            --logger:trx --results-directory ./TestResults
        continue-on-error: false

      - name: Debug Test Results
        run: ls -R TestResults

      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
        env:
          DOTNET_ROOT: /home/runner/.dotnet

      - name: Convert Coverage Report
        run: |
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet-coverage report \
            --input TestResults/**/coverage.cobertura.xml \
            --output coverage-reports/SonarQube.xml \
            --format sonar

      - name: Debug Coverage Reports
        run: cat coverage-reports/SonarQube.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.cs.opencover.reportsPaths=coverage-reports/SonarQube.xml
            -Dsonar.coverage.exclusions=**/bin/**,**/obj/**
