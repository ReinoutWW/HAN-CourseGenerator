@page "/evl/{Id:int?}"
@using HAN.Services.DTOs
@using HAN.Services.Interfaces
@using NotificationService = HAN.Client.Components.Base.SystemFeedbackNotificationService
@using HAN.Client.Components.UI;

@inject IEvlService EvlService
@inject NavigationManager NavigationManager
@inject NotificationService SystemFeedbackNotificationService

<h3>@(evl.Id == 0 ? "Create Evl" : "Edit Evl")</h3>

<RadzenTemplateForm Data="@evl" Submit="@((EvlDto args) => { Submit(args); })">
    <RadzenFieldset Text="Evl Info">
        <RadzenStack Gap="1rem">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenLabel Text="Name" Component="Name" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenTextBox Style="width: 100%;" @bind-Value="evl.Name" Name="Name" />
                    <RadzenRequiredValidator Component="Name" Text="Name is required." />
                    <RadzenLengthValidator Component="Name" Min="2" Max="100" Text="Name must be between 2 and 100 characters." />
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenLabel Text="Description" Component="Description" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenTextArea Style="width: 100%;" Rows="5" @bind-Value="evl.Description" Name="Description" />
                    <RadzenRequiredValidator Component="Description" Text="Description is required." />
                    <RadzenLengthValidator Component="Description" Min="5" Max="450" Text="Description must be between 5 and 450 characters." />
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Left" Gap="1rem" class="rz-mt-8 rz-mb-4">
        <SecondaryButton Size="ButtonSize.Large" Icon="cancel" Text="Cancel" Click="@Cancel" />
        <PrimaryButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public int? Id { get; set; } = null;
    
    private bool IsEditMode => Id.HasValue;
    private bool IsCreateMode => !Id.HasValue;

    private EvlDto evl = new();

    protected override void OnInitialized()
    {
        if (IsEditMode)
        {
            try
            {
                evl = EvlService.GetEvlById(Id.Value);
            }
            catch (KeyNotFoundException)
            {
                NavigationManager.NavigateTo("/404");
            }
        }

        base.OnInitialized();
    }

    void Submit(EvlDto arg)
    {
        var evlDto = IsCreateMode ? EvlService.CreateEvl(arg) : EvlService.UpdateEvl(arg);
        
        NavigationManager.NavigateTo("/evl/overview");
        SystemFeedbackNotificationService.AddNotification($"Evl ({evlDto.Id}) saved successfully!");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/evl/overview");
    }
}