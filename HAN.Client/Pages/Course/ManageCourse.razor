@page "/course/{Id:int?}"

@using HAN.Services.DTOs
@using HAN.Services.Interfaces

@inject IEvlService EvlService
@inject ICourseService CourseService
@inject NavigationManager NavigationManager

<h3>@(course.Id == 0 ? "Create Course" : "Edit Course")</h3>

<RadzenTemplateForm Data="@course" Submit="@((CourseDto args) => { Submit(args); })">
    <RadzenFieldset Text="Course Info">
        <RadzenStack Gap="1rem">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenLabel Text="Name" Component="Name" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenTextBox Style="width: 100%;" @bind-Value="course.Name" Name="Name" />
                    <RadzenRequiredValidator Component="Name" Text="Name is required." />
                    <RadzenLengthValidator Component="Name" Min="5" Max="100" Text="Name must be between 5 and 100 characters." />
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenLabel Text="Description" Component="Description" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenTextArea Style="width: 100%;" Rows="5" @bind-Value="course.Description" Name="Description" />
                    <RadzenLengthValidator Component="Description" Max="450" Text="Description cannot exceed 450 characters." />
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12" SizeMD="4">
                    <RadzenLabel Text="Evaluations (Evls)" Component="Evls" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenDropDown
                        @bind-Value="selectedEvls"
                        Data="@allEvls"
                        AllowClear="true"
                        Placeholder="Select evaluations"
                        TextProperty="Name"
                        ValueProperty="Id"
                        Multiple="true"
                        class="mb-2"
                        Style="width: 100%;" />
                    <RadzenLink Text="Create New Evaluation" Path="/evl/create" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Cancel" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter] public int? Id { get; set; } = null;

    private CourseDto course = new();
    private List<int> selectedEvls = new();
    private List<EvlDto> allEvls = new();

    protected override void OnInitialized()
    {
        allEvls = EvlService.GetAllEvls().ToList();

        if (Id.HasValue)
        {
            course = CourseService.GetCourseById(Id.Value);
            selectedEvls = course.Evls.Select(e => e.Id).ToList();
        }
        else
        {
            course = new CourseDto();
        }
        
        base.OnInitialized();
    }

    void Submit(CourseDto arg)
    {
        try
        {
            if (course.Id == 0)
            {
                CourseService.CreateCourse(arg);
            }
            else
            {
                CourseService.UpdateCourse(arg);
            }
            NavigationManager.NavigateTo("/course/overview");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/course/overview");
    }
}