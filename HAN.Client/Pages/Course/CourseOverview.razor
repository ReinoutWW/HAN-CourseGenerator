@page "/course/overview"
@using HAN.Client.Services.Models
@using HAN.Client.Components.UI
@using CourseService = HAN.Client.Services.CourseService

@using NotificationService = HAN.Client.Components.Base.SystemFeedbackNotificationService

@inject NotificationService NotificationService;
@inject CourseService CourseService;

<div class="mb-3">
    <RadzenHeading class="mb-1" Size="H1" Text="Your Courses. One Page." />
    <RadzenText TextStyle="TextStyle.Subtitle1" Text="This overview shows all courses that are available on the platform." /> 
</div>

@if (_courses.Count == 0 && !_isLoading)
{
    <RadzenText Text="No courses available at the moment." />
}
else
{
    <CustomRadzenDataList WrapItems="false" 
              AllowPaging="true" 
              IsLoading="@_isLoading" 
              Data="@_courses" 
              TItem="Course"
        >
        <ChildContent Context="item">
            <div>
                <RadzenHeading Size="H3" Text="@item.Name" />
                <RadzenText Text="@item.Description" />
            </div>
        </ChildContent>
    </CustomRadzenDataList>
}

@code {
    List<Course> _courses = [];

    private bool _isLoading = true;

    protected override async Task<Task> OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            _courses = await CourseService.GetCoursesAsync() ?? new List<Course>();
        } 
        catch (Exception ex)
        {
            NotificationService.AddNotification(
                 "An error occurred while loading the courses. Please try again later.",
                 AlertStyle.Danger
            );
        }
        
        _isLoading = false;
        return Task.CompletedTask;
    }
}