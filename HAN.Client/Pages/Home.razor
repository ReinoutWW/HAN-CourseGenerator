@page "/"
@using HAN.Data.Entities
@using HAN.Repositories.Interfaces
@inject IUserRepository UserRepository

@* This page is garbage, but needed to demonstrate the logic. *@
@* Normally, you'd never have a UserRepository injected in the presenation layer *@

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<div class="alert alert-warning" role="alert">
    Before authentication will function correctly, you must configure your provider details in <code>Program.cs</code>
</div>

<ul>
@foreach (var user in _users)
{
    <li>@user.Id - @user.Name</li>
}
</ul>
    
<RadzenTextBox Placeholder="name" @bind-Value="@_userName"></RadzenTextBox>
<RadzenButton Text="Click me!" Click="TestRepository"></RadzenButton>

@code {
    // Demo code
    private string _userName = string.Empty;
    private List<User> _users = new();

    // Demo code
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        GetAllUsers();
        return base.OnAfterRenderAsync(firstRender);
    }

    // Demo code
    private void GetAllUsers()
    {
        _users = UserRepository.GetAll().ToList();
    }
    
    // Demo code
    private void TestRepository()
    {
        UserRepository.Add(
            new User()
            {
                Name = _userName
            }    
        );

        var user = UserRepository.GetById(1);
        
        Console.WriteLine(user?.Name);

        InvokeAsync(StateHasChanged);
    }

}