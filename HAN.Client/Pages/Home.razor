@page "/"
@using HAN.Services.DTOs
@using HAN.Services.Interfaces

@inject ICourseService CourseService
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<RadzenStack class="rz-p-0 rz-p-md-12">
    <RadzenCard class="rz-p-4" Variant="Variant.Outlined">
        <RadzenCarousel @ref=carousel @bind-SelectedIndex="@selectedIndex" Auto="@auto" Interval="@interval" PagerOverlay="false" ButtonShade="Shade.Default" Style="height:500px">
            <Items>
                @foreach (var course in _courses)
                {
                    <RadzenCarouselItem>
                        <RadzenCard class="rz-w-75">
                            <div class="mb-4">
                                <RadzenStack Orientation="Orientation.Horizontal" Gap="4px" class="mb-2 han-delimiter">
                                    <RadzenIcon Icon="school"/>
                                    @course.Name
                                </RadzenStack>
                                <ul>
                                    @foreach(var evl in course.Evls)
                                    {
                                        <li>
                                            <RadzenStack Orientation="Orientation.Horizontal" Gap="4px">
                                                <RadzenIcon Icon="workspace_premium"/>
                                                <RadzenLink Path=@($"/evl/{evl.Id}") Text="@evl.Name"></RadzenLink>
                                            </RadzenStack>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <RadzenButton Click="@(() => NavigateToEditCourse(course.Id))" Icon="edit">
                                <RadzenIcon Icon="edit"/> Edit
                            </RadzenButton>
                        </RadzenCard>
                    </RadzenCarouselItem>
                }
            </Items>
        </RadzenCarousel>
    </RadzenCard>
</RadzenStack>

@code {
    private List<CourseDto> _courses = [];
    int selectedIndex;
    RadzenCarousel carousel;

    bool auto = true;
    double interval = 4000;
    string toggleText = "Stop";

    bool started = true;
    void Toggle()
    {
        if (started)
        {
            carousel.Stop();
            toggleText = "Start";
        }
        else
        {
            carousel.Start();
            toggleText = "Stop";
        }

        started = !started;
    }

    protected override Task OnInitializedAsync()
    {
        _courses = CourseService.GetAllCourses();
        return base.OnInitializedAsync();
    }

    private void NavigateToEditCourse(int courseId) => NavigationManager.NavigateTo($"/course/{courseId}");

}